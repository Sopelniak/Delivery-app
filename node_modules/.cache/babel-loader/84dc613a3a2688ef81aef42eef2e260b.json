{"ast":null,"code":"import * as Yup from \"yup\";\nexport const schema = Yup.object().shape({\n  name: Yup.string().matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\").required(),\n  number: Yup.string().matches(/^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/, \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\").required()\n});","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/pages/ShoppingCartPage/ValidationSchema.js"],"names":["Yup","schema","object","shape","name","string","matches","required","number"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACvCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GACHC,OADG,CAEF,4DAFE,EAGF,wIAHE,EAKHC,QALG,EADiC;AAOvCC,EAAAA,MAAM,EAAER,GAAG,CAACK,MAAJ,GACLC,OADK,CAEJ,8EAFI,EAGJ,8FAHI,EAKLC,QALK;AAP+B,CAAnB,CAAf","sourcesContent":["import * as Yup from \"yup\";\r\n\r\nexport const schema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .matches(\r\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n    )\r\n    .required(),\r\n  number: Yup.string()\r\n    .matches(\r\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\r\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n    )\r\n    .required(),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
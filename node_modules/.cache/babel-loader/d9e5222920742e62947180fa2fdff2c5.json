{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\@Repositories\\\\test-tasks\\\\Delivery-app\\\\src\\\\pages\\\\ShoppingCartPage\\\\ShoppingCartPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { CartItem } from 'components/CartItem/CartItem';\nimport { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectProducts } from 'redux/selectors';\nimport { actionClearCart, actionUpdateQuantity } from 'redux/store';\nimport { InputStyled, InputBox, LabelStyled, Box, ListStyled, BtnBox, Total, Button } from './ShoppingCartPage.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ShoppingCartPage() {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const productsInCart = useSelector(selectProducts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTotal(calculateTotal(productsInCart));\n  }, [productsInCart]);\n\n  const updateQuantity = (id, quantity) => {\n    dispatch(actionUpdateQuantity({\n      id,\n      quantity\n    }));\n  };\n\n  function calculateTotal(productsInCart) {\n    let sum = 0;\n    productsInCart.forEach(_ref => {\n      let {\n        price,\n        quantity\n      } = _ref;\n      sum += Number(price) * Number(quantity);\n    });\n    return sum.toFixed(2);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      phone,\n      address\n    } = e.target;\n    const products = productsInCart.map(item => {\n      const {\n        id,\n        name,\n        quantity\n      } = item;\n      return {\n        id,\n        name,\n        quantity\n      };\n    });\n    const newOrder = {\n      id: nanoid(),\n      name: name.value,\n      email: email.value,\n      phone: phone.value,\n      address: address.value,\n      products,\n      total\n    };\n    console.log(newOrder);\n    e.target.reset();\n    dispatch(actionClearCart());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(InputBox, {\n          children: [/*#__PURE__*/_jsxDEV(LabelStyled, {\n            children: [\"Name\", /*#__PURE__*/_jsxDEV(InputStyled, {\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelStyled, {\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(InputStyled, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelStyled, {\n            children: [\"Phone\", /*#__PURE__*/_jsxDEV(InputStyled, {\n              type: \"tel\",\n              name: \"phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelStyled, {\n            children: [\"Address\", /*#__PURE__*/_jsxDEV(InputStyled, {\n              type: \"text\",\n              name: \"address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListStyled, {\n          children: productsInCart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n            item: item,\n            updateQuantity: updateQuantity\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BtnBox, {\n        children: [/*#__PURE__*/_jsxDEV(Total, {\n          children: [\"total: \", total, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ShoppingCartPage, \"Wu2qBLZIBWs6A+WWWbIlrAPRVcc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShoppingCartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartPage\");","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/pages/ShoppingCartPage/ShoppingCartPage.jsx"],"names":["CartItem","nanoid","useEffect","useState","useDispatch","useSelector","selectProducts","actionClearCart","actionUpdateQuantity","InputStyled","InputBox","LabelStyled","Box","ListStyled","BtnBox","Total","Button","ShoppingCartPage","total","setTotal","productsInCart","dispatch","calculateTotal","updateQuantity","id","quantity","sum","forEach","price","Number","toFixed","submitHandler","e","preventDefault","name","email","phone","address","target","products","map","item","newOrder","value","console","log","reset"],"mappings":"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","sourcesContent":["import { CartItem } from 'components/CartItem/CartItem';\r\nimport { nanoid } from 'nanoid';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectProducts } from 'redux/selectors';\r\nimport { actionClearCart, actionUpdateQuantity } from 'redux/store';\r\nimport {\r\n  InputStyled,\r\n  InputBox,\r\n  LabelStyled,\r\n  Box,\r\n  ListStyled,\r\n  BtnBox,\r\n  Total,\r\n  Button,\r\n} from './ShoppingCartPage.styled';\r\n\r\nexport function ShoppingCartPage() {\r\n  const [total, setTotal] = useState(0);\r\n  const productsInCart = useSelector(selectProducts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTotal(calculateTotal(productsInCart));\r\n  }, [productsInCart]);\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    dispatch(actionUpdateQuantity({ id, quantity }));\r\n  };\r\n\r\n  function calculateTotal(productsInCart) {\r\n    let sum = 0;\r\n    productsInCart.forEach(({ price, quantity }) => {\r\n      sum += Number(price) * Number(quantity);\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const { name, email, phone, address } = e.target;\r\n    const products = productsInCart.map(item => {\r\n      const { id, name, quantity } = item;\r\n      return { id, name, quantity };\r\n    });\r\n    const newOrder = {\r\n      id: nanoid(),\r\n      name: name.value,\r\n      email: email.value,\r\n      phone: phone.value,\r\n      address: address.value,\r\n      products,\r\n      total,\r\n    };\r\n    console.log(newOrder);\r\n    e.target.reset();\r\n    dispatch(actionClearCart());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitHandler}>\r\n        <Box>\r\n          <InputBox>\r\n            <LabelStyled>\r\n              Name\r\n              <InputStyled type=\"text\" name=\"name\" />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              Email\r\n              <InputStyled type=\"email\" name=\"email\" />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              Phone\r\n              <InputStyled type=\"tel\" name=\"phone\" />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              Address\r\n              <InputStyled type=\"text\" name=\"address\" />\r\n            </LabelStyled>\r\n          </InputBox>\r\n\r\n          <ListStyled>\r\n            {productsInCart.map(item => (\r\n              <CartItem\r\n                key={item.id}\r\n                item={item}\r\n                updateQuantity={updateQuantity}\r\n              />\r\n            ))}\r\n          </ListStyled>\r\n        </Box>\r\n\r\n        <BtnBox>\r\n          <Total>total: {total}$</Total>\r\n\r\n          <Button type=\"submit\">Submit</Button>\r\n        </BtnBox>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
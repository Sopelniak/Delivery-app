{"ast":null,"code":"import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\nexport const actionAddProductToCart = createAction('products/addProduct');\nexport const actionDeleteProductFromCart = createAction('products/deleteProduct');\nexport const actionUpdateQuantity = createAction('products/updateProducts');\nexport const actionClearCart = createAction('products/clear');\nconst productsReducer = createReducer([], {\n  [actionAddProductToCart]: (state, action) => {\n    state.push(action.payload);\n  },\n  [actionDeleteProductFromCart]: (state, action) => state.filter(product => product.id !== action.payload),\n  [actionUpdateQuantity]: (state, action) => {\n    const index = state.findIndex(item => item.id === action.payload.id);\n    state[index].quantity = action.payload.quantity;\n  },\n  [actionClearCart]: (state, action) => {\n    state = action.payload;\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    products: productsReducer\n  }\n});","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/redux/store.js"],"names":["configureStore","createAction","createReducer","actionAddProductToCart","actionDeleteProductFromCart","actionUpdateQuantity","actionClearCart","productsReducer","state","action","push","payload","filter","product","id","index","findIndex","item","quantity","store","reducer","products"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,kBAA5D;AAEA,OAAO,MAAMC,sBAAsB,GAAGF,YAAY,CAAC,qBAAD,CAA3C;AACP,OAAO,MAAMG,2BAA2B,GAAGH,YAAY,CACrD,wBADqD,CAAhD;AAGP,OAAO,MAAMI,oBAAoB,GAAGJ,YAAY,CAAC,yBAAD,CAAzC;AACP,OAAO,MAAMK,eAAe,GAAGL,YAAY,CAAC,gBAAD,CAApC;AAEP,MAAMM,eAAe,GAAGL,aAAa,CAAC,EAAD,EAAK;AACxC,GAACC,sBAAD,GAA0B,CAACK,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,IAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,GAHuC;AAIxC,GAACP,2BAAD,GAA+B,CAACI,KAAD,EAAQC,MAAR,KAC7BD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAA9C,CALsC;AAMxC,GAACN,oBAAD,GAAwB,CAACG,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAMM,KAAK,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAAnD,CAAd;AACAN,IAAAA,KAAK,CAACO,KAAD,CAAL,CAAaG,QAAb,GAAwBT,MAAM,CAACE,OAAP,CAAeO,QAAvC;AACD,GATuC;AAUxC,GAACZ,eAAD,GAAmB,CAACE,KAAD,EAAQC,MAAR,KAAmB;AACpCD,IAAAA,KAAK,GAAGC,MAAM,CAACE,OAAf;AACD;AAZuC,CAAL,CAArC;AAeA,OAAO,MAAMQ,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEd;AADH;AADyB,CAAD,CAA5B","sourcesContent":["import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const actionAddProductToCart = createAction('products/addProduct');\r\nexport const actionDeleteProductFromCart = createAction(\r\n  'products/deleteProduct'\r\n);\r\nexport const actionUpdateQuantity = createAction('products/updateProducts');\r\nexport const actionClearCart = createAction('products/clear');\r\n\r\nconst productsReducer = createReducer([], {\r\n  [actionAddProductToCart]: (state, action) => {\r\n    state.push(action.payload);\r\n  },\r\n  [actionDeleteProductFromCart]: (state, action) =>\r\n    state.filter(product => product.id !== action.payload),\r\n  [actionUpdateQuantity]: (state, action) => {\r\n    const index = state.findIndex(item => item.id === action.payload.id);\r\n    state[index].quantity = action.payload.quantity;\r\n  },\r\n  [actionClearCart]: (state, action) => {\r\n    state = action.payload;\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
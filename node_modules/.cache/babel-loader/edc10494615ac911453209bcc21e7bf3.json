{"ast":null,"code":"import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\nexport const actionAddProductToCart = createAction('products/addProduct');\nexport const actionDeleteProductFromCart = createAction('products/deleteProduct');\nexport const actionUpdateProductsInCart = createAction('products/updateProducts');\nconst productsReducer = createReducer([1], {\n  [actionAddProductToCart]: (state, action) => {\n    state.push(action.payload);\n  },\n  [actionDeleteProductFromCart]: (state, action) => state.filter(product => product.id !== action.payload),\n  [actionUpdateProductsInCart]: (state, action) => [...action.payload]\n});\nexport const store = configureStore({\n  reducer: {\n    products: productsReducer\n  }\n});","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/redux/store.js"],"names":["configureStore","createAction","createReducer","actionAddProductToCart","actionDeleteProductFromCart","actionUpdateProductsInCart","productsReducer","state","action","push","payload","filter","product","id","store","reducer","products"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,kBAA5D;AAEA,OAAO,MAAMC,sBAAsB,GAAGF,YAAY,CAAC,qBAAD,CAA3C;AACP,OAAO,MAAMG,2BAA2B,GAAGH,YAAY,CACrD,wBADqD,CAAhD;AAGP,OAAO,MAAMI,0BAA0B,GAAGJ,YAAY,CACpD,yBADoD,CAA/C;AAIP,MAAMK,eAAe,GAAGJ,aAAa,CAAC,CAAC,CAAD,CAAD,EAAM;AACzC,GAACC,sBAAD,GAA0B,CAACI,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,IAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,GAHwC;AAIzC,GAACN,2BAAD,GAA+B,CAACG,KAAD,EAAQC,MAAR,KAC7BD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAA9C,CALuC;AAMzC,GAACL,0BAAD,GAA8B,CAACE,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGA,MAAM,CAACE,OAAX;AANR,CAAN,CAArC;AASA,OAAO,MAAMI,KAAK,GAAGd,cAAc,CAAC;AAClCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEV;AADH;AADyB,CAAD,CAA5B","sourcesContent":["import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const actionAddProductToCart = createAction('products/addProduct');\r\nexport const actionDeleteProductFromCart = createAction(\r\n  'products/deleteProduct'\r\n);\r\nexport const actionUpdateProductsInCart = createAction(\r\n  'products/updateProducts'\r\n);\r\n\r\nconst productsReducer = createReducer([1], {\r\n  [actionAddProductToCart]: (state, action) => {\r\n    state.push(action.payload);\r\n  },\r\n  [actionDeleteProductFromCart]: (state, action) =>\r\n    state.filter(product => product.id !== action.payload),\r\n  [actionUpdateProductsInCart]: (state, action) => [...action.payload],\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
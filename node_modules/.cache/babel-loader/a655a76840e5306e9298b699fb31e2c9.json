{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\@Repositories\\\\test-tasks\\\\Delivery-app\\\\src\\\\components\\\\ProductsList\\\\ProductCard\\\\ProductCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionAddProductToCart, actionDeleteProductFromCart } from 'redux/store';\nimport { Button, ListItem, Name, Price } from './ProductCard.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductCard(_ref) {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const {\n    name,\n    price,\n    id\n  } = product;\n  const [btnValue, setBtnValue] = useState('add to Cart');\n  const [btnColor, setBtnColor] = useState('');\n  const dispatch = useDispatch();\n\n  const onBtnClick = () => {\n    if (btnValue === 'add to Cart') {\n      dispatch(actionAddProductToCart({ ...product,\n        quantity: '1'\n      }));\n      setBtnValue('remove from Cart');\n    } else {\n      dispatch(actionDeleteProductFromCart(id));\n      setBtnValue('add to Cart');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(Name, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Price, {\n        children: [price, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onBtnClick,\n        children: btnValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductCard, \"ZCFBhcBJi8pQdsrA5nD7x3DyAK0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/components/ProductsList/ProductCard/ProductCard.jsx"],"names":["useState","useDispatch","actionAddProductToCart","actionDeleteProductFromCart","Button","ListItem","Name","Price","ProductCard","product","name","price","id","btnValue","setBtnValue","btnColor","setBtnColor","dispatch","onBtnClick","quantity"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,sBADF,EAEEC,2BAFF,QAGO,aAHP;AAIA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,sBAA9C;;AAEA,OAAO,SAASC,WAAT,OAAkC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAsBH,OAA5B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,aAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACvB,QAAIL,QAAQ,KAAK,aAAjB,EAAgC;AAC9BI,MAAAA,QAAQ,CAACf,sBAAsB,CAAC,EAAE,GAAGO,OAAL;AAAcU,QAAAA,QAAQ,EAAE;AAAxB,OAAD,CAAvB,CAAR;AACAL,MAAAA,WAAW,CAAC,kBAAD,CAAX;AACD,KAHD,MAGO;AACLG,MAAAA,QAAQ,CAACd,2BAA2B,CAACS,EAAD,CAA5B,CAAR;AACAE,MAAAA,WAAW,CAAC,aAAD,CAAX;AACD;AACF,GARD;;AASA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,KAAD;AAAA,mBAAQC,KAAR,EAAc,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEO,UAAjB;AAAA,kBAA8BL;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBeL,W;UAKGP,W;;;KALHO,W","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  actionAddProductToCart,\r\n  actionDeleteProductFromCart,\r\n} from 'redux/store';\r\nimport { Button, ListItem, Name, Price } from './ProductCard.styled';\r\n\r\nexport function ProductCard({ product }) {\r\n  const { name, price, id } = product;\r\n  const [btnValue, setBtnValue] = useState('add to Cart');\r\n  const [btnColor, setBtnColor] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onBtnClick = () => {\r\n    if (btnValue === 'add to Cart') {\r\n      dispatch(actionAddProductToCart({ ...product, quantity: '1' }));\r\n      setBtnValue('remove from Cart');\r\n    } else {\r\n      dispatch(actionDeleteProductFromCart(id));\r\n      setBtnValue('add to Cart');\r\n    }\r\n  };\r\n  return (\r\n    <ListItem>\r\n      <Name>{name}</Name>\r\n      <div>\r\n        <Price>{price}$</Price>\r\n        <Button onClick={onBtnClick}>{btnValue}</Button>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
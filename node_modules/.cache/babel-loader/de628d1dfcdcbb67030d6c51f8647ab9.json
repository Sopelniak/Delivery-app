{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\@Repositories\\\\test-tasks\\\\Delivery-app\\\\src\\\\pages\\\\ShoppingCartPage\\\\ShoppingCartPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { CartItem } from 'components/CartItem/CartItem';\nimport { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectProducts } from 'redux/selectors';\nimport { actionUpdateProductsInCart } from 'redux/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ShoppingCartPage() {\n  _s();\n\n  // const [productsInCart, setProductsInCart] = useState([\n  //   {\n  //     id: 'GGOEGOAR013099',\n  //     name: 'Google Stylus Pen w/ LED Light',\n  //     description:\n  //       'Get yourself a great multitasking tool! Write a note, sign a tablet, and shine a light with this Google Stylus Pen w/LED Light!',\n  //     features:\n  //       '<p>Aluminum cap off ballpoint pen</p>\\n<p>LED light</p>\\n<p>Stylus that works with touch screen devices</p>\\n<p>Three mercury-free AG3/LR41 batteries included</p>',\n  //     price: '5.50',\n  //     keywords:\n  //       'Ballpoint Pen/Stylus/LED Light, LED Light, Pen, pens, Pens, Google Ballpoint Pen/LED Light, ballpoint pen, Google Ballpoint Pen/Stylus/LED Light, stylus, Stylus, LED Light, LED lights, led, LED',\n  //     url: 'Google+Stylus+Pen+w+LED+Light',\n  //     category: 'office',\n  //     subcategory: 'office',\n  //     quantity: '1',\n  //   },\n  //   {\n  //     id: 'GGOEGOCJ093999',\n  //     name: 'Google Large Standard Journal Grey',\n  //     description:\n  //       'Use all 192 pages to store anything from meeting notes to that next big idea in this Google hard cover notebook.',\n  //     features:\n  //       '<p>Hard Cover</p>\\n<p>Elastic Band Closure with Ribbon Page Marker</p>\\n<p>192 White, College Ruled Pages</p>\\n<p>Size: 5.5 x 8.5 inch</p>',\n  //     price: '15.99',\n  //     keywords:\n  //       'Google Large Standard Journal Grey, google journal, google large standard journal, google large grey journal, google grey journal Google Large Standard Journal Grey',\n  //     url: 'Google+Large+Standard+Journal+Grey',\n  //     category: 'office',\n  //     subcategory: 'office',\n  //     quantity: '1',\n  //   },\n  // ]);\n  const [total, setTotal] = useState(0);\n  const productsInCart = useSelector(selectProducts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTotal(calculateTotal(productsInCart));\n  }, [productsInCart]);\n\n  const updateQuantity = (id, quantity) => {\n    const itemIndex = productsInCart.findIndex(item => item.id === id);\n    console.log(productsInCart);\n    const arr = [...productsInCart];\n    console.log(arr);\n    arr[itemIndex].quantity = quantity;\n    dispatch(actionUpdateProductsInCart(arr));\n  };\n\n  function calculateTotal(productsInCart) {\n    let sum = 0;\n    productsInCart.forEach(_ref => {\n      let {\n        price,\n        quantity\n      } = _ref;\n      sum += Number(price) * Number(quantity);\n    });\n    return sum;\n  }\n\n  const submitHandler = e => {\n    const {\n      name,\n      email,\n      phone,\n      address\n    } = e.target;\n    const newOrder = {\n      id: nanoid(),\n      name: name.value,\n      email: email.value,\n      phone: phone.value,\n      address: address.value\n    };\n    console.log(newOrder);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: productsInCart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          updateQuantity: updateQuantity,\n          updateTotal: setTotal,\n          productsInCart: productsInCart,\n          calculateTotal: calculateTotal\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"total: \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShoppingCartPage, \"Wu2qBLZIBWs6A+WWWbIlrAPRVcc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShoppingCartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartPage\");","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/pages/ShoppingCartPage/ShoppingCartPage.jsx"],"names":["CartItem","nanoid","useEffect","useState","useDispatch","useSelector","selectProducts","actionUpdateProductsInCart","ShoppingCartPage","total","setTotal","productsInCart","dispatch","calculateTotal","updateQuantity","id","quantity","itemIndex","findIndex","item","console","log","arr","sum","forEach","price","Number","submitHandler","e","name","email","phone","address","target","newOrder","value","preventDefault","map"],"mappings":"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","sourcesContent":["import { CartItem } from 'components/CartItem/CartItem';\r\nimport { nanoid } from 'nanoid';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectProducts } from 'redux/selectors';\r\nimport { actionUpdateProductsInCart } from 'redux/store';\r\n\r\nexport function ShoppingCartPage() {\r\n  // const [productsInCart, setProductsInCart] = useState([\r\n  //   {\r\n  //     id: 'GGOEGOAR013099',\r\n  //     name: 'Google Stylus Pen w/ LED Light',\r\n  //     description:\r\n  //       'Get yourself a great multitasking tool! Write a note, sign a tablet, and shine a light with this Google Stylus Pen w/LED Light!',\r\n  //     features:\r\n  //       '<p>Aluminum cap off ballpoint pen</p>\\n<p>LED light</p>\\n<p>Stylus that works with touch screen devices</p>\\n<p>Three mercury-free AG3/LR41 batteries included</p>',\r\n  //     price: '5.50',\r\n  //     keywords:\r\n  //       'Ballpoint Pen/Stylus/LED Light, LED Light, Pen, pens, Pens, Google Ballpoint Pen/LED Light, ballpoint pen, Google Ballpoint Pen/Stylus/LED Light, stylus, Stylus, LED Light, LED lights, led, LED',\r\n  //     url: 'Google+Stylus+Pen+w+LED+Light',\r\n  //     category: 'office',\r\n  //     subcategory: 'office',\r\n  //     quantity: '1',\r\n  //   },\r\n  //   {\r\n  //     id: 'GGOEGOCJ093999',\r\n  //     name: 'Google Large Standard Journal Grey',\r\n  //     description:\r\n  //       'Use all 192 pages to store anything from meeting notes to that next big idea in this Google hard cover notebook.',\r\n  //     features:\r\n  //       '<p>Hard Cover</p>\\n<p>Elastic Band Closure with Ribbon Page Marker</p>\\n<p>192 White, College Ruled Pages</p>\\n<p>Size: 5.5 x 8.5 inch</p>',\r\n  //     price: '15.99',\r\n  //     keywords:\r\n  //       'Google Large Standard Journal Grey, google journal, google large standard journal, google large grey journal, google grey journal Google Large Standard Journal Grey',\r\n  //     url: 'Google+Large+Standard+Journal+Grey',\r\n  //     category: 'office',\r\n  //     subcategory: 'office',\r\n  //     quantity: '1',\r\n  //   },\r\n  // ]);\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const productsInCart = useSelector(selectProducts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTotal(calculateTotal(productsInCart));\r\n  }, [productsInCart]);\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    const itemIndex = productsInCart.findIndex(item => item.id === id);\r\n    console.log(productsInCart);\r\n    const arr = [...productsInCart];\r\n    console.log(arr);\r\n    arr[itemIndex].quantity = quantity;\r\n    dispatch(actionUpdateProductsInCart(arr));\r\n  };\r\n\r\n  function calculateTotal(productsInCart) {\r\n    let sum = 0;\r\n    productsInCart.forEach(({ price, quantity }) => {\r\n      sum += Number(price) * Number(quantity);\r\n    });\r\n    return sum;\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    const { name, email, phone, address } = e.target;\r\n    const newOrder = {\r\n      id: nanoid(),\r\n      name: name.value,\r\n      email: email.value,\r\n      phone: phone.value,\r\n      address: address.value,\r\n    };\r\n    console.log(newOrder);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <label>\r\n          Name\r\n          <input type=\"text\" name=\"name\" />\r\n        </label>\r\n        <label>\r\n          Email\r\n          <input type=\"email\" name=\"email\" />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input type=\"tel\" name=\"phone\" />\r\n        </label>\r\n        <label>\r\n          Address\r\n          <input type=\"text\" name=\"address\" />\r\n        </label>\r\n\r\n        <ul>\r\n          {productsInCart.map(item => (\r\n            <CartItem\r\n              key={item.id}\r\n              item={item}\r\n              updateQuantity={updateQuantity}\r\n              updateTotal={setTotal}\r\n              productsInCart={productsInCart}\r\n              calculateTotal={calculateTotal}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        <p>total: {total}</p>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
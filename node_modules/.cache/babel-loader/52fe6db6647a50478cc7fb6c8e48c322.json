{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\@Repositories\\\\test-tasks\\\\Delivery-app\\\\src\\\\pages\\\\ShoppingCartPage\\\\ShoppingCartPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { CartItem } from 'components/CartItem/CartItem';\nimport { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ShoppingCartPage() {\n  _s();\n\n  const [productsInCart, setProductsInCart] = useState([{\n    id: 'GGOEGOAR013099',\n    name: 'Google Stylus Pen w/ LED Light',\n    description: 'Get yourself a great multitasking tool! Write a note, sign a tablet, and shine a light with this Google Stylus Pen w/LED Light!',\n    features: '<p>Aluminum cap off ballpoint pen</p>\\n<p>LED light</p>\\n<p>Stylus that works with touch screen devices</p>\\n<p>Three mercury-free AG3/LR41 batteries included</p>',\n    price: '5.50',\n    keywords: 'Ballpoint Pen/Stylus/LED Light, LED Light, Pen, pens, Pens, Google Ballpoint Pen/LED Light, ballpoint pen, Google Ballpoint Pen/Stylus/LED Light, stylus, Stylus, LED Light, LED lights, led, LED',\n    url: 'Google+Stylus+Pen+w+LED+Light',\n    category: 'office',\n    subcategory: 'office',\n    quantity: '1'\n  }, {\n    id: 'GGOEGOCJ093999',\n    name: 'Google Large Standard Journal Grey',\n    description: 'Use all 192 pages to store anything from meeting notes to that next big idea in this Google hard cover notebook.',\n    features: '<p>Hard Cover</p>\\n<p>Elastic Band Closure with Ribbon Page Marker</p>\\n<p>192 White, College Ruled Pages</p>\\n<p>Size: 5.5 x 8.5 inch</p>',\n    price: '15.99',\n    keywords: 'Google Large Standard Journal Grey, google journal, google large standard journal, google large grey journal, google grey journal Google Large Standard Journal Grey',\n    url: 'Google+Large+Standard+Journal+Grey',\n    category: 'office',\n    subcategory: 'office',\n    quantity: '1'\n  }]);\n  const [mapedProducts, setMapedProducts] = useState([]);\n  useEffect(() => {\n    setMapedProducts(productsInCart.map(_ref => {\n      let {\n        id,\n        price\n      } = _ref;\n      return {\n        id,\n        price,\n        quantity: '1'\n      };\n    }));\n  }, [productsInCart]);\n\n  const mapedProductsHandler = (id, quantity) => {\n    setTimeout(() => {\n      console.log(mapedProducts);\n      const product = mapedProducts.find(product => product.id === id);\n      console.log(product);\n      product.quantity = quantity.toString();\n      setMapedProducts(prev => {\n        return [...prev, product];\n      });\n    }, 1000);\n  };\n\n  const calculateTotal = () => {\n    let summ = 0;\n    mapedProducts.forEach(_ref2 => {\n      let {\n        price,\n        quantity\n      } = _ref2;\n      summ = summ + price * quantity;\n    });\n    return summ;\n  };\n\n  const submitHandler = e => {\n    const {\n      name,\n      email,\n      phone,\n      address\n    } = e.target;\n    const newOrder = {\n      id: nanoid(),\n      name: name.value,\n      email: email.value,\n      phone: phone.value,\n      address: address.value\n    };\n    console.log(newOrder);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: productsInCart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          mapedProductsHandler: mapedProductsHandler\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"total: \", calculateTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShoppingCartPage, \"B7k4wt+XCoArmahsKP096A2Fry4=\");\n\n_c = ShoppingCartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartPage\");","map":{"version":3,"sources":["D:/IT/@Repositories/test-tasks/Delivery-app/src/pages/ShoppingCartPage/ShoppingCartPage.jsx"],"names":["CartItem","nanoid","useEffect","useState","ShoppingCartPage","productsInCart","setProductsInCart","id","name","description","features","price","keywords","url","category","subcategory","quantity","mapedProducts","setMapedProducts","map","mapedProductsHandler","setTimeout","console","log","product","find","toString","prev","calculateTotal","summ","forEach","submitHandler","e","email","phone","address","target","newOrder","value","preventDefault","item"],"mappings":"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","sourcesContent":["import { CartItem } from 'components/CartItem/CartItem';\r\nimport { nanoid } from 'nanoid';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport function ShoppingCartPage() {\r\n  const [productsInCart, setProductsInCart] = useState([\r\n    {\r\n      id: 'GGOEGOAR013099',\r\n      name: 'Google Stylus Pen w/ LED Light',\r\n      description:\r\n        'Get yourself a great multitasking tool! Write a note, sign a tablet, and shine a light with this Google Stylus Pen w/LED Light!',\r\n      features:\r\n        '<p>Aluminum cap off ballpoint pen</p>\\n<p>LED light</p>\\n<p>Stylus that works with touch screen devices</p>\\n<p>Three mercury-free AG3/LR41 batteries included</p>',\r\n      price: '5.50',\r\n      keywords:\r\n        'Ballpoint Pen/Stylus/LED Light, LED Light, Pen, pens, Pens, Google Ballpoint Pen/LED Light, ballpoint pen, Google Ballpoint Pen/Stylus/LED Light, stylus, Stylus, LED Light, LED lights, led, LED',\r\n      url: 'Google+Stylus+Pen+w+LED+Light',\r\n      category: 'office',\r\n      subcategory: 'office',\r\n      quantity: '1',\r\n    },\r\n    {\r\n      id: 'GGOEGOCJ093999',\r\n      name: 'Google Large Standard Journal Grey',\r\n      description:\r\n        'Use all 192 pages to store anything from meeting notes to that next big idea in this Google hard cover notebook.',\r\n      features:\r\n        '<p>Hard Cover</p>\\n<p>Elastic Band Closure with Ribbon Page Marker</p>\\n<p>192 White, College Ruled Pages</p>\\n<p>Size: 5.5 x 8.5 inch</p>',\r\n      price: '15.99',\r\n      keywords:\r\n        'Google Large Standard Journal Grey, google journal, google large standard journal, google large grey journal, google grey journal Google Large Standard Journal Grey',\r\n      url: 'Google+Large+Standard+Journal+Grey',\r\n      category: 'office',\r\n      subcategory: 'office',\r\n      quantity: '1',\r\n    },\r\n  ]);\r\n  const [mapedProducts, setMapedProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMapedProducts(\r\n      productsInCart.map(({ id, price }) => {\r\n        return {\r\n          id,\r\n          price,\r\n          quantity: '1',\r\n        };\r\n      })\r\n    );\r\n  }, [productsInCart]);\r\n\r\n  const mapedProductsHandler = (id, quantity) => {\r\n    setTimeout(() => {\r\n      console.log(mapedProducts);\r\n      const product = mapedProducts.find(product => product.id === id);\r\n      console.log(product);\r\n      product.quantity = quantity.toString();\r\n      setMapedProducts(prev => {\r\n        return [...prev, product];\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    let summ = 0;\r\n    mapedProducts.forEach(({ price, quantity }) => {\r\n      summ = summ + price * quantity;\r\n    });\r\n    return summ;\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    const { name, email, phone, address } = e.target;\r\n    const newOrder = {\r\n      id: nanoid(),\r\n      name: name.value,\r\n      email: email.value,\r\n      phone: phone.value,\r\n      address: address.value,\r\n    };\r\n    console.log(newOrder);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <label>\r\n          Name\r\n          <input type=\"text\" name=\"name\" />\r\n        </label>\r\n        <label>\r\n          Email\r\n          <input type=\"email\" name=\"email\" />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input type=\"tel\" name=\"phone\" />\r\n        </label>\r\n        <label>\r\n          Address\r\n          <input type=\"text\" name=\"address\" />\r\n        </label>\r\n\r\n        <ul>\r\n          {productsInCart.map(item => (\r\n            <CartItem\r\n              key={item.id}\r\n              item={item}\r\n              mapedProductsHandler={mapedProductsHandler}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        <p>total: {calculateTotal()}</p>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}